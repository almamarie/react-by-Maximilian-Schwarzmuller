{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/digitalhouse/Documents/src/Javascript/courses/react-complete-guide-udemy/23-nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, _objectSpread({}, props.meetupData), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  return {\n    fallback: false,\n    paths: [{\n      params: {\n        meetupId: \"m1\"\n      }\n    }, {\n      params: {\n        meetupId: \"m2\"\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://louis:nextjs@cluster0.efq20.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetup = await meetupCollections.findOne(meetupId);\n  client.close();\n  console.log(meetup);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        title: meetup.id,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/digitalhouse/Documents/src/Javascript/courses/react-complete-guide-udemy/23-nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","props","meetupData","getStaticPaths","fallback","paths","params","meetupId","getStaticProps","context","client","connect","db","meetupCollections","collection","meetup","findOne","close","console","log","id","title","image","address","description"],"mappings":";;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBAAO,QAAC,YAAD,oBAAkBA,KAAK,CAACC,UAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KADK,EAOL;AACED,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KAPK;AAFF,GAAP;AAgBD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AAEA,QAAMG,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,2FADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0BT,QAA1B,CAArB;AAEAG,EAAAA,MAAM,CAACO,KAAP;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,SAAO;AACLd,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVkB,QAAAA,EAAE,EAAEb,QADM;AAEVc,QAAAA,KAAK,EAAEN,MAAM,CAACK,EAFJ;AAGVE,QAAAA,KAAK,EAAEP,MAAM,CAACO,KAHJ;AAIVC,QAAAA,OAAO,EAAER,MAAM,CAACQ,OAJN;AAKVC,QAAAA,WAAW,EAAET,MAAM,CAACS;AALV;AADP;AADF,GAAP;AAWD;AAED,eAAexB,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return <MeetupDetail {...props.meetupData} />;\n}\n\nexport async function getStaticPaths() {\n  return {\n    fallback: false,\n    paths: [\n      {\n        params: {\n          meetupId: \"m1\",\n        },\n      },\n\n      {\n        params: {\n          meetupId: \"m2\",\n        },\n      },\n    ],\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://louis:nextjs@cluster0.efq20.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n\n  const meetup = await meetupCollections.findOne(meetupId);\n\n  client.close();\n\n  console.log(meetup);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        title: meetup.id,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description,\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}